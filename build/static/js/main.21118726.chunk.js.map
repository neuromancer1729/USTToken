{"version":3,"sources":["components/Message.js","components/Faucet.js","components/TokenSend.js","App.js","reportWebVitals.js","index.js"],"names":["Message","balance","Alert","variant","tokenAddress","Faucet","props","useState","setBalance","showBalance","setShowBalance","a","window","ethereum","request","method","account","provider","ethers","providers","Web3Provider","contract","Contract","tokenContract","abi","balanceOf","console","log","toString","signer","getSigner","faucet","Card","style","background","Body","Subtitle","className","Button","onClick","TokenSend","userAccount","setUserAccount","amount","setAmount","requestAccount","transfer","transation","wait","onChange","e","target","value","placeholder","App","Token","USTToken","Container","Row","Col","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21118726.chunk.js","sourcesContent":["import Alert from 'react-bootstrap/Alert'\n\nconst Message = ({ balance }) => {\n    return (\n      <div>\n      <Alert variant=\"info\"> balance : {balance}</Alert>\n      </div>\n  )\n}\n\nexport default Message\n","import { useState } from 'react';\nimport { ethers } from 'ethers'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport Message from './Message'\n\nconst tokenAddress = \"0xa82F21F033c1A30e8c729Bf2003e0BaA93f6aD62\"\n\nconst Faucet = (props) => {\n\n  const [balance, setBalance] = useState()\n  const [showBalance, setShowBalance] = useState(false)\n\n\n  async function getBalance() {\n    if (typeof window.ethereum !== 'undefined') {\n      const [account] = await window.ethereum.request({ method: 'eth_requestAccounts' })\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(tokenAddress, props.tokenContract.abi, provider)\n      const balance = await contract.balanceOf(account);\n      console.log(\"Balance: \", balance.toString());\n      setBalance(balance.toString());\n      setShowBalance(true);\n    }\n  }\n\n  async function faucet() {\n    if (typeof window.ethereum !== 'undefined') {\n      const account = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(tokenAddress, props.tokenContract.abi, signer);\n      contract.faucet(account[0], 100);\n    }\n  }\n    return (\n        <div>\n        <Card style={{background: \"rgba(227, 104, 222, 0.71)\"}}>\n        <Card.Body>\n        <Card.Subtitle>recieve faucet ERC20 to your wallet\n        </Card.Subtitle><br></br>\n        <div className=\"d-grid gap-2\">\n        <Button onClick={faucet}>get faucet token!</Button>\n        <Button onClick={getBalance} variant=\"warning\">check my balance</Button>   \n        { showBalance ? <Message balance={balance}/> : null }\n        </div>\n        </Card.Body>\n        </Card>\n        </div>\n    )\n}\n\nexport default Faucet","\nimport { useState } from 'react';\nimport { ethers } from 'ethers'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\nconst tokenAddress = \"0xa82F21F033c1A30e8c729Bf2003e0BaA93f6aD62\"\n\nconst TokenSend = (props) => {\n\n  const [userAccount, setUserAccount] = useState()\n  const [amount, setAmount] = useState()\n\n  // request access to the user's MetaMask account\n  async function requestAccount() {\n    await window.ethereum.request({ method: 'eth_requestAccounts' });\n  }\n\n  async function sendCoins() {\n  if (typeof window.ethereum !== 'undefined') {\n    await requestAccount()\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(tokenAddress, props.tokenContract.abi, signer);\n    const transation = await contract.transfer(userAccount, amount);\n    await transation.wait();\n    console.log(`${amount} Coins successfully sent to ${userAccount}`);\n  }\n}\n    return (\n        <Card style={{background: \"rgba(227, 104, 222, 0.71)\"}}>\n        <Card.Body>\n        <Card.Subtitle> send faucet to an address\n        </Card.Subtitle>\n        <br></br>\n        <div className=\"d-grid gap-2\">\n        <input onChange={e => setUserAccount(e.target.value)} placeholder=\"Payee 0x address\" />\n        <input onChange={e => setAmount(e.target.value)} placeholder=\"Amount\" />\n        <Button onClick={sendCoins} variant=\"success\">send </Button>\n        </div>\n        </Card.Body>\n        </Card>\n    )\n}\n\nexport default TokenSend\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nimport Faucet from './components/Faucet.js'\n\nimport USTToken from './artifacts/contracts/UselessToken.sol/USTToken.json'\n\nimport TokenSend from './components/TokenSend.js'\n\nfunction App() {\n\n  const Token = USTToken;\n\n  return (\n    <div className=\"App\">\n    <Container>\n    <Row className=\"justify-content-md-center\">\n      <Col>\n        <div>our faucet</div>\n        <Faucet  tokenContract={Token}/>\n      </Col>\n      <Col>\n        <div> our send area</div>\n        <TokenSend tokenContract={Token}/>\n      </Col>\n    </Row>\n    </Container>\n    </div>\n  );\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}